{"version":3,"sources":["components/login/login.js"],"names":["Login","handleChange","name","event","empty","state","ErrorMsg","props","ResetLogErr","setState","target","value","handleSubmit","e","preventDefault","user","user_name","UserName","password","Password","LoginUser","history","IsLoggedIn","this","push","prevProps","prevState","Errors","LogErrors","classes","className","goBackContainer","variant","goBackButton","component","Link","to","login","root","paper","Avatar","AccountCircle","form","onSubmit","ErrContainer","ErrP","RenderErrorMsg","required","textField","label","onChange","margin","type","button","color","nextProps","Component","protoType","PropTypes","object","isRequired","func","connect","withStyles","theme","position","top","left","display","height","width","minWidth","overflow","flexDirection","flexWrap","padding","spacing","maxWidth","backgroundColor","fill","justifyContent","marginBottom","borderColor","borderBottomColor","boxShadow","textTransform","letterSpacing","borderBottom","borderRadius","textAlign","fontSize"],"mappings":"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","file":"static/js/14.d255e262.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { LoginUser, ResetLogErr } from '../../actions/apiCalls';\r\nimport { empty } from '../../is-empty';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme =>({\r\n    login:{\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0,\r\n        display: 'flex',\r\n        height: '100%',\r\n        width: '100%',\r\n        minWidth: 300,\r\n        overflow: 'hidden',\r\n        margin: '50px 0'\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        padding: theme.spacing(3, 2),\r\n        width: '35%',\r\n        minWidth: 300,\r\n        maxWidth: 800,\r\n        margin: 'auto',\r\n        overflow: 'hidden',\r\n        backgroundColor: '#424242'\r\n    },\r\n    Avatar:{\r\n        width: '25%',\r\n        minWidth: 130,\r\n        height: 'auto',\r\n        margin: '10px auto'\r\n    },\r\n    AccountCircle:{\r\n        width: '100%',\r\n        height: '100%',\r\n        fill: '#fff'\r\n    },\r\n    form:{\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly',\r\n        overflow: 'hidden',\r\n        marginBottom: 20,\r\n    },\r\n    textField: {\r\n        width: '70%',\r\n        maxWidth: 700,\r\n        minWidth: 250,\r\n        margin: '20px auto',\r\n        color: '#fff',\r\n        borderColor: '#fff',\r\n        '& label':{\r\n            color: '#a9a9a9'\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: '#ccc',\r\n        },\r\n        '& .MuiInputBase-input':{\r\n            color: '#f5f5f5'\r\n        },\r\n        '& .MuiFilledInput-underline:after':{\r\n            borderBottomColor: '#a9a9a9',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderColor: '#fff',\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: '#fff',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: '#fff',\r\n            },\r\n        }, \r\n    },\r\n    button:{\r\n        width: '70%',\r\n        maxWidth: 700,\r\n        minWidth: 250,\r\n        boxShadow: 'none',\r\n        margin: `${theme.spacing(1)}px auto`,\r\n        backgroundColor: '#419aff',\r\n        borderColor: '#419aff',\r\n        color: '#fff',\r\n        textTransform: 'capitalize',\r\n        letterSpacing: 1,\r\n        padding: '6px 1.5rem',\r\n        borderBottom: '3px solid #357ac5',\r\n        '&:hover':{\r\n            backgroundColor: '#357ac5',\r\n            borderColor: '#357ac5'\r\n        },\r\n        '&active':{\r\n            boxShadow: 'none',\r\n            backgroundColor: '#357ac5',\r\n            borderColor: '#357ac5'\r\n        }\r\n  },\r\n  goBackButton: {\r\n    boxShadow: 'none',\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#419aff\",\r\n    borderColor: '#419aff',\r\n    color: \"#fff\",\r\n    borderBottom: \"3px solid #357ac5\",\r\n    '&:hover':{\r\n        backgroundColor: \"#357ac5\",\r\n        borderColor: \"#357ac5\"\r\n    },\r\n    '&active':{\r\n        boxShadow: 'none',\r\n        backgroundColor: \"#357ac5\",\r\n        borderColor: \"#357ac5\"\r\n    }  \r\n    },\r\n    goBackContainer:{\r\n        display: \"flex\",\r\n        margin: \"1rem 2rem\"\r\n    },\r\n    ErrContainer: {\r\n        width: '70%',\r\n        maxWidth: '700',\r\n        minWidth: '250',\r\n        margin: '20px auto',\r\n        backgroundColor: '#f00',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        textAlign: 'center'\r\n    },\r\n    ErrP:{\r\n        color: '#fff',\r\n        textTransform: 'uppercase',\r\n        fontSize: 14,\r\n        letterSpacing: 1\r\n    }\r\n});\r\n\r\n\r\n\r\nconst RenderErrorMsg = (ErrorMsg, classes) =>{\r\n    if(empty(ErrorMsg)){\r\n        return null;\r\n    }else{\r\n        return(\r\n            <div className={classes.ErrContainer}>\r\n                <p className={classes.ErrP}>{ErrorMsg}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            UserName: \"\",\r\n            Password: \"\",\r\n            IsLoggedIn: false,\r\n            ErrorMsg: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({IsLoggedIn: this.props.user.IsLoggedIn})   \r\n\t\tif(this.state.IsLoggedIn) {\r\n\t\t\tthis.props.history.push('/dashboard');\r\n        }\r\n    }\r\n    \r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps !== prevState){\r\n\r\n            if(!empty(nextProps.Errors.LogErrors)){\r\n                return {ErrorMsg: nextProps.Errors.LogErrors}\r\n            }\r\n\r\n            if(!empty(nextProps.user.IsLoggedIn)){\r\n                return {IsLoggedIn: nextProps.user.IsLoggedIn}\r\n            }\r\n\r\n            if(empty(nextProps.Errors.LogErrors)){\r\n                return {ErrorMsg: ''}\r\n            }\r\n\r\n           \r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps !== this.props){\r\n\r\n            if(!empty(this.props.user.IsLoggedIn)){\r\n                this.setState({\r\n                    IsLoggedIn: this.props.user.IsLoggedIn\r\n                })\r\n            }\r\n\r\n            if(!empty(this.props.Errors.LogErrors)){\r\n                this.setState({ErrorMsg: this.props.Errors.LogErrors})\r\n            }\r\n            \r\n            if(empty(this.props.Errors.LogErrors)){\r\n                this.setState({ErrorMsg: ''})\r\n            } \r\n\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        if(!empty(this.state.ErrorMsg)){\r\n            this.props.ResetLogErr();\r\n        }\r\n        this.setState({[name]: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const user = {\r\n            user_name: this.state.UserName,\r\n            password: this.state.Password\r\n        }\r\n        this.props.LoginUser(user, this.props.history)\r\n    };\r\n\r\n    render(){\r\n        const {classes} = this.props;\r\n        const {ErrorMsg} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div className={classes.goBackContainer}>\r\n                    <Button variant=\"contained\" className={classes.goBackButton} component={Link} to={`/`}>Go Back Home</Button>\r\n                </div>\r\n                <div className={classes.login}>\r\n                    <Paper classes={{root: classes.paper}}>\r\n                        <div className={classes.Avatar}>\r\n                            <AccountCircle className={classes.AccountCircle}/>\r\n                        </div>\r\n                        <form className={classes.form} onSubmit={this.handleSubmit}>\r\n                            {RenderErrorMsg(ErrorMsg, classes)}\r\n                            <TextField \r\n                                required\r\n                                classes={{root: classes.textField}} \r\n                                value={this.state.UserName} \r\n                                label=\"Username\" \r\n                                onChange={this.handleChange('UserName')}\r\n                                margin=\"normal\"\r\n                                variant=\"filled\"\r\n                            />\r\n                            <TextField \r\n                                required\r\n                                classes={{root: classes.textField}} \r\n                                value={this.state.Password} \r\n                                type=\"password\"\r\n                                label=\"Password\" \r\n                                onChange={this.handleChange('Password')}\r\n                                margin=\"normal\"\r\n                                variant=\"filled\"\r\n                            />\r\n                            <Button \r\n                                className={classes.button}  variant=\"contained\" \r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                login\r\n                            </Button> \r\n                        </form>\r\n                    </Paper>         \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.protoType = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    LoginUser: PropTypes.func.isRequired,\r\n    Errors: PropTypes.object.isRequired,\r\n    ResetLogErr: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    Errors: state.Errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {LoginUser, ResetLogErr})(withStyles(styles)(Login))"],"sourceRoot":""}