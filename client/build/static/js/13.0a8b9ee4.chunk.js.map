{"version":3,"sources":["styleComponents/navigation/NavMenu.js","styleComponents/navigation/NavMobileMenu.js","styleComponents/navigation/NavigatonBar.js","components/dashboard/dashboard.js"],"names":["NavMenu","this","props","anchorEl","isMenuOpen","handleMenuClose","LogoutUser","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","PaperProps","style","minWidth","MenuItem","onClick","Component","protoType","PropTypes","object","isRequired","func","NavMobileMenu","mobileMoreAnchorEl","handleMobileMenuClose","handleProfileMenuOpen","user","isMobileMenuOpen","Boolean","keepMounted","IconButton","color","Badge","badgeContent","name","theme","createMuiTheme","NavigatonBar","event","setState","currentTarget","handleMobileMenuOpen","handleDrawerOpen","handleDrawerClose","state","mobileOpen","classes","className","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","aria-label","edge","menuButton","hide","Typography","variant","noWrap","grow","sectionDesktop","Divider","orientation","dividerVer","Button","aria-owns","undefined","aria-haspopup","profileBtn","sectionMobile","Drawer","drawer","drawerOpen","drawerClose","paper","toolbar","direction","List","ListItem","button","key","ListItemIcon","ListItemText","primary","withStyles","display","backgroundColor","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","breakpoints","up","alignItems","justifyContent","padding","mixins","flexGrow","height","margin","Dashboard","IsLoggedIn","history","push","role","prevProps","prevState","e","preventDefault","logoutUser","bind","content","nextProps","connect"],"mappings":"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","file":"static/js/13.0a8b9ee4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\n\r\nexport class NavMenu extends Component {\r\n    render() {\r\n        const{anchorEl, isMenuOpen, handleMenuClose, LogoutUser} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    getContentAnchorEl={null}\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                      }}\r\n                    open={isMenuOpen}\r\n                    onClose={handleMenuClose}\r\n                    PaperProps={{\r\n                        style: {\r\n                          minWidth: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n                    <MenuItem onClick={LogoutUser}>Logout</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNavMenu.protoType = {\r\n    anchorEl: PropTypes.object.isRequired,\r\n    isMenuOpen: PropTypes.object.isRequired,\r\n    handleMenuClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default NavMenu\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class NavMobileMenu extends Component {\r\n    render() {\r\n        const{mobileMoreAnchorEl, handleMenuClose, handleMobileMenuClose, handleProfileMenuOpen, user} = this.props;\r\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n        \r\n        return (\r\n            <div>\r\n                <Menu\r\n                    anchorEl={mobileMoreAnchorEl}\r\n                    getContentAnchorEl={null}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                      }}\r\n                    open={isMobileMenuOpen}\r\n                    onClose={handleMenuClose}\r\n                    keepMounted\r\n                    PaperProps={{\r\n                        style: {\r\n                            minWidth: 200,\r\n                        },\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={handleMobileMenuClose}>\r\n                        <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                        </IconButton>\r\n                        <p>Messages</p>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleMobileMenuClose}>\r\n                        <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={11} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                        </IconButton>\r\n                        <p>Notifications</p>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleProfileMenuOpen}>\r\n                        <IconButton color=\"inherit\">\r\n                        <AccountCircle />\r\n                        </IconButton>\r\n                        <p>{user.user.name || 'user name'}</p>\r\n                    </MenuItem>\r\n                </Menu>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNavMobileMenu.protoType = {\r\n    mobileMoreAnchorEl: PropTypes.object.isRequired,\r\n    handleMenuClose: PropTypes.func.isRequired,\r\n    handleMobileMenuClose: PropTypes.func.isRequired,\r\n    handleProfileMenuOpen: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    LogoutUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NavMobileMenu\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { withStyles, createMuiTheme  } from '@material-ui/core/styles';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport NavMenu from './NavMenu'\r\nimport NavMobileMenu from './NavMobileMenu'\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n});\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#2196f3',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'none',\r\n        },\r\n    },\r\n    profileBtn:{\r\n        padding: theme.spacing(0, 1), \r\n    },\r\n    dividerVer:{\r\n        height: 50,\r\n        margin: '0 0.5rem'\r\n    }\r\n})\r\n\r\n\r\nclass NavigatonBar extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            mobileOpen: false,\r\n            mobileMoreAnchorEl: null,\r\n            anchorEl: null,\r\n        }\r\n    }\r\n\r\n    handleProfileMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n        this.handleMobileMenuClose();\r\n    };\r\n\r\n    handleMobileMenuOpen = event => {\r\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n    };\r\n    \r\n    handleDrawerOpen = () =>{\r\n        this.setState({open: true});\r\n    }\r\n\r\n    handleMobileMenuClose = () => {\r\n        this.setState({ mobileMoreAnchorEl: null });\r\n    };\r\n\r\n    handleDrawerClose = () =>{\r\n        this.setState({open: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes, user, LogoutUser} = this.props;\r\n        const{open, anchorEl, mobileMoreAnchorEl} = this.state;\r\n        const isMenuOpen = Boolean(anchorEl);\r\n\r\n        return (\r\n        <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={this.handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Dashboard\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n                <div className={classes.sectionDesktop}>\r\n\r\n                   \r\n\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={1} color=\"secondary\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={1} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n\r\n                    <Divider orientation=\"vertical\" className={classes.dividerVer} />\r\n\r\n                    <Button\r\n                        aria-owns={isMenuOpen ? 'material-appbar' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleProfileMenuOpen}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle />\r\n                            <p className={classes.profileBtn}>{user.user.name || 'user name'}</p>\r\n                       <ArrowDropDownIcon />\r\n                    </Button>\r\n\r\n                </div>\r\n                <div className={classes.sectionMobile}>\r\n                    <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                        <MoreIcon />\r\n                    </IconButton>\r\n                </div>            \r\n        </Toolbar>\r\n        </AppBar>\r\n\r\n        <NavMenu anchorEl={anchorEl} isMenuOpen={isMenuOpen} handleMenuClose={this.handleMenuClose} LogoutUser={LogoutUser} /> \r\n\r\n        <NavMobileMenu mobileMoreAnchorEl={mobileMoreAnchorEl} handleMenuClose={this.handleMenuClose} handleMobileMenuClose={this.handleMobileMenuClose} handleProfileMenuOpen={this.handleProfileMenuOpen} LogoutUser={LogoutUser} user={user} />  \r\n\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n            paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            }),\r\n            }}\r\n            open={open}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                    <ListItem button key={'Inbox'}>\r\n                        <ListItemIcon>\r\n                            <InboxIcon /> \r\n                        </ListItemIcon>\r\n                        <ListItemText primary={'Inbox'} />\r\n                    </ListItem>\r\n            </List>\r\n            <Divider />\r\n        </Drawer>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nNavigatonBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    LogoutUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NavigatonBar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport NavigatonBar from '../../styleComponents/navigation/NavigatonBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {logoutUser} from '../../actions/apiCalls';\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        display: 'flex'\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n})\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            IsLoggedIn: false,\r\n            user: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({IsLoggedIn: this.props.user.IsLoggedIn})   \r\n\t\tif(!this.state.IsLoggedIn) { \r\n            this.props.history.push('/');\r\n        }\r\n        if(!this.props.user.user.role === 'admin'){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    \r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps !== prevState){\r\n            return {IsLoggedIn: nextProps.user.IsLoggedIn}\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps !== this.props){\r\n            this.setState({\r\n                IsLoggedIn: this.props.user.IsLoggedIn\r\n            })\r\n            if(!this.props.user.IsLoggedIn) { \r\n                this.props.history.push('/');\r\n            }\r\n            if(!this.props.user.user.role === 'admin'){\r\n                this.props.history.push('/');\r\n            }\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    logoutUser(e){\r\n        e.preventDefault();\r\n        this.props.logoutUser(this.props.history);\r\n    }\r\n\r\n    render(){\r\n        const{classes, user} = this.props;\r\n        return(\r\n            <div className={classes.root}>\r\n                <NavigatonBar LogoutUser={this.logoutUser.bind(this)} user={user} />\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <div>Hi Dashboard !!</div>\r\n                </main> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.protoType = {\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(withStyles(styles)(Dashboard));\r\n\r\n\r\n\r\n"],"sourceRoot":""}